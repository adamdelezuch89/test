services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started

  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:4.0.3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build: .
    command: celery -A app worker -l INFO
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      web:
        condition: service_started

volumes:
  postgres_data:
